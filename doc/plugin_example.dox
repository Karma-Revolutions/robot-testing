/*
 * Copyright (C) 2015 iCub Facility
 * Authors: Ali Paikan
 * CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT
 *
 */

/**

@page rtf_plugin_example Using plug-in to develop test cases

\author Ali Paikan

<br>
\section desc Description
Test cases can be written as dynamic loadable libraries (e.g., .so, .dll) to be loaded and executed as separate plug-ins. This allows to have a simple test runner which loads and run the tests at run time without any needs to recompile the test runner. Using a simple example, we  show how this can be done. 

\note The source code of the tutorial can be also found in the \c 'examples/plugin' folder within the RTF project directory. To compile it, you just need to enable the BUILD_EXAMPLES=ON flag of the cmake (if it is not already enabled) and build the RTF. 

<br>
\section req Requirements
You do not need nay external library to use the plug-ins. All you need is to simply enable the plug-in system in the RTF and recompile it if it is not already enabled (it should be enabled by default). 

\verbatim
   $ cd robot-testing-framework/build
   $ cmake ../ -DENABLE_plug-in=ON
\endverbatim

<br>
\section write Writing the plug-in 
Create a class which inherited from the TestCase class. Override the \c run() method and/or \c setup() , \c tearDown() if needed.  Here is an example: 

\include plugin/MyTest.h

Implement the test body in the \c run() method and add use the \c 'SHLIBPP_DEFINE_DEFAULT_SHARED_CLASS(...)' macro to prepare the plug-in. The macro implements the necessary functionalities to make your test class be accessible from a shared library. 

\include plugin/MyTest.cpp

<br>
\section runner Writing the test runner 
Your plug-in is almost ready and can be compiled and built. Before doing, that we show how to develop a simple test runner to load the plug-in and run the test. It is quite simple. First create an instance of \c shlibpp::SharedLibraryClassFactory<TestCase> factory to load your test plug-in library (.dll, .so, ...).  Then using the \c shlibpp::SharedLibraryClass<TestCase> create a TestCase instance of your own test case. When you have an instance of your test case, it can be used to run the test as usual (see \ref rtf_examples if you are not familiar with running a test case). In the following example we use a TestRunner to execute our test: 

\include plugin/run.cpp

<br>
\section build Build and run the test 
Now you can compile and build the plug-in and the runner. You need to link them against \c rtf and \c sharedlib++ which both of them can be found within the project build directory after compiling RTF. Here we use a simple cmake file to build the plug-in and the runner at the same time. The cmake file can be found in the \c 'example/plug-in' directory within the RTF. So far the path to the header files are set with respect to the 'example/plug-in' folder.  

\include plugin/CMakeLists.txt
<br>
Now you can run the test as follows: 
\verbatim
   $ cd build/example/plug-ins
   $ ./run libmytest.so 
     Loading the plugin... 
     Staring test runner.
     Test case MyTest started...
     [INFO]  (MyTest) reports: running MyTest::setup...
     [INFO]  (MyTest) reports: testing integers
     [FAIL]  (MyTest) checking (a<b): 5 is not smaller than 3.
     [INFO]  (MyTest) reports: running MyTest::teardown...
     [ERROR] (MyTest) asserts error with exception: this is just for example!
     Test case MyTest failed!
     Ending test runner.
\endverbatim


*/

